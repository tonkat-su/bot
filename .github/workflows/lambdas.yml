on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
name: lambdas
jobs:
  build_lambdas:
    strategy:
      matrix:
        go-version: [^1.x]
    runs-on: ubuntu-latest
    steps:
      - name: install go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: checkout code
        uses: actions/checkout@v2
      - name: go build
        env:
          CGO_ENABLED: "0"
          GOOS: linux
        run: |
          mkdir build
          go build -a -ldflags='-extldflags=-static' -o ./build/ ./lambdas/...
      - name: archive built binaries
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ${{ github.workspace }}
  cdk_diff:
    if: github.ref != 'refs/heads/master'
    needs: [build_lambdas]
    runs-on: ubuntu-latest
    steps:
      - name: download binaries
        id: download
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ${{ github.workspace }}
      - name: fix executable permissions
        run: chmod 755 -R ${{ github.workspace }}/build
      - name: cdk diff
        uses: youyo/aws-cdk-github-actions@v1
        with:
          cdk_subcommand: 'diff'
          cdk_version: '1.72.0'
          working_dir: 'infra'
        env:
          AWS_DEFAULT_REGION: 'us-west-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  cdk_deploy:
    if: github.ref == 'refs/heads/master'
    needs: [build_lambdas]
    runs-on: ubuntu-latest
    steps:
      - name: download binaries
        id: download
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ${{ github.workspace }}
      - name: fix executable permissions
        run: chmod 755 -R ${{ github.workspace }}/build
      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v1
        with:
          cdk_subcommand: 'deploy --require-approval never'
          cdk_version: '1.72.0'
          working_dir: 'infra'
        env:
          AWS_DEFAULT_REGION: 'us-west-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
